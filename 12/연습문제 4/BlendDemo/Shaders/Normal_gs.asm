//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc Normal.hlsl /Od /Zi /T gs_5_0 /E GS /Fo Normal_gs.cso /Fc
//    Normal_gs.asm
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64
//   float4x4 gTexTransform;            // Offset:   64 Size:    64 [unused]
//
// }
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12 [unused]
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16 [unused]
//   float4 gFogColor;                  // Offset:  448 Size:    16 [unused]
//   float gFogStart;                   // Offset:  464 Size:     4 [unused]
//   float gFogRange;                   // Offset:  468 Size:     4 [unused]
//   float2 cbPerObjectPad2;            // Offset:  472 Size:     8 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  480
//       float FalloffStart;            // Offset:  492
//       float3 Direction;              // Offset:  496
//       float FalloffEnd;              // Offset:  508
//       float3 Position;               // Offset:  512
//       float SpotPower;               // Offset:  524
//
//   } gLights[16];                     // Offset:  480 Size:   768 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerObject                       cbuffer      NA          NA    0        1
// cbPass                            cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// POSITION                 0   xyz         0     NONE  float   xyz 
// NORMAL                   0   xyz         1     NONE  float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
// m0:POSITION              0   xyz         1     NONE  float   xyz 
// m0:COLOR                 0   xyzw        2     NONE  float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[20], immediateIndexed
dcl_input v[1][0].xyz
dcl_input v[1][1].xyz
dcl_temps 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology linestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_maxout 2

#line 123 "C:\Users\lemon\DirectX12Study\Directx12_study\12\연습문제 4\BlendDemo\Shaders\Normal.hlsl"
mov r0.xyz, v[0][0].xyzx
mov r0.w, l(1.000000)
mul r1.xyz, l(2.000000, 2.000000, 2.000000, 0.000000), v[0][1].xyzx
mov r1.w, l(0)
add r1.xyzw, r0.xyzw, r1.xyzw

#line 129
dp4 r2.x, r0.xyzw, cb0[0].xyzw
dp4 r2.y, r0.xyzw, cb0[1].xyzw
dp4 r2.z, r0.xyzw, cb0[2].xyzw
dp4 r2.w, r0.xyzw, cb0[3].xyzw
dp4 r0.x, r2.xyzw, cb1[16].xyzw  // gout<0:NaN:Inf>
dp4 r0.y, r2.xyzw, cb1[17].xyzw  // gout<1:NaN:Inf>
dp4 r0.z, r2.xyzw, cb1[18].xyzw  // gout<2:NaN:Inf>
dp4 r0.w, r2.xyzw, cb1[19].xyzw  // gout<3:NaN:Inf>
mov r2.xyz, v[0][0].xyzx  // gout<4,5,6>
mov r3.xyzw, l(1.000000,0,0,1.000000)  // gout<7: 1f,8: -0f,9: -0f,10: 1f>
mov o0.xyzw, r0.xyzw  // lineStream<0,0,0,0>
mov o1.xyz, r2.xyzx  // lineStream<0,0,0>
mov o2.xyzw, r3.xyzw  // lineStream<0,0,0,0>
emit_stream m0

#line 129
dp4 r0.x, r1.xyzw, cb0[0].xyzw
dp4 r0.y, r1.xyzw, cb0[1].xyzw
dp4 r0.z, r1.xyzw, cb0[2].xyzw
dp4 r0.w, r1.xyzw, cb0[3].xyzw
dp4 r2.x, r0.xyzw, cb1[16].xyzw  // gout<0:NaN:Inf>
dp4 r2.y, r0.xyzw, cb1[17].xyzw  // gout<1:NaN:Inf>
dp4 r2.z, r0.xyzw, cb1[18].xyzw  // gout<2:NaN:Inf>
dp4 r2.w, r0.xyzw, cb1[19].xyzw  // gout<3:NaN:Inf>
mov r1.xyz, r1.xyzx  // gout<4:Inf,5:Inf,6:Inf>

#line 133
mov o0.xyzw, r2.xyzw  // lineStream<0,0,0,0>
mov o1.xyz, r1.xyzx  // lineStream<0,0,0>
mov o2.xyzw, r3.xyzw  // lineStream<0,0,0,0>
emit_stream m0

#line 112
ret 
// Approximately 33 instruction slots used
