//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc Tessellation.hlsl /Od /Zi /T ds_5_0 /E DS /Fo tessellation.cso /Fc
//    tessellation_ds.asm
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64
//   float4x4 gTexTransform;            // Offset:   64 Size:    64 [unused]
//
// }
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12 [unused]
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16 [unused]
//   float4 gFogColor;                  // Offset:  448 Size:    16 [unused]
//   float gFogStart;                   // Offset:  464 Size:     4 [unused]
//   float gFogRange;                   // Offset:  468 Size:     4 [unused]
//   float2 cbPerObjectPad2;            // Offset:  472 Size:     8 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  480
//       float FalloffStart;            // Offset:  492
//       float3 Direction;              // Offset:  496
//       float FalloffEnd;              // Offset:  508
//       float3 Position;               // Offset:  512
//       float SpotPower;               // Offset:  524
//
//   } gLights[16];                     // Offset:  480 Size:   768 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerObject                       cbuffer      NA          NA    0        1
// cbPass                            cbuffer      NA          NA    1        1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_TessFactor            0   x           0  TRIEDGE  float       
// SV_TessFactor            1   x           1  TRIEDGE  float       
// SV_TessFactor            2   x           2  TRIEDGE  float       
// SV_InsideTessFactor      0   x           3   TRIINT  float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// POSITION                 0   xyz         0     NONE  float   x z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float   xyzw
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[20], immediateIndexed
dcl_input vDomain.xy
dcl_input vicp[3][0].xz
dcl_output_siv o0.xyzw, position
dcl_temps 2

#line 155 "C:\Users\lemon\DirectX12Study\Directx12_study\14\연습문제 1, 3\BasicTessellation\Shaders\Tessellation.hlsl"
mov r0.xy, -vicp[0][0].xzxx
add r0.xy, r0.xyxx, vicp[1][0].xzxx
mul r0.xy, r0.xyxx, vDomain.xxxx
add r0.xy, r0.xyxx, vicp[0][0].xzxx  // v1<0:NaN:Inf,2:NaN:Inf>
mov r0.zw, -r0.xxxy
add r0.zw, r0.zzzw, vicp[2][0].xxxz
mul r0.zw, r0.zzzw, vDomain.yyyy
add r0.xz, r0.zzwz, r0.xxyx  // p<0:NaN:Inf,2:NaN:Inf>
mov r1.xy, r0.xzxx  // p<0:NaN:Inf,2:NaN:Inf>

#line 159
sincos r1.z, null, r1.x
mul r1.z, r1.z, r1.y
sincos null, r1.y, r1.y
mul r1.x, r1.y, r1.x
add r1.x, r1.x, r1.z
mul r0.y, r1.x, l(0.300000)  // p<1:NaN:Inf>
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[0].xyzw  // posW<0:NaN:Inf>
dp4 r1.y, r0.xyzw, cb0[1].xyzw  // posW<1:NaN:Inf>
dp4 r1.z, r0.xyzw, cb0[2].xyzw  // posW<2:NaN:Inf>
dp4 r1.w, r0.xyzw, cb0[3].xyzw  // posW<3:NaN:Inf>
dp4 r0.x, r1.xyzw, cb1[16].xyzw  // dout<0:NaN:Inf>
dp4 r0.y, r1.xyzw, cb1[17].xyzw  // dout<1:NaN:Inf>
dp4 r0.z, r1.xyzw, cb1[18].xyzw  // dout<2:NaN:Inf>
dp4 r0.w, r1.xyzw, cb1[19].xyzw  // dout<3:NaN:Inf>
mov o0.xyzw, r0.xyzw  // DS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
ret 
// Approximately 26 instruction slots used
